# Default values for falcon-controller.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates
receiver:
  replicaCount: 1
  image:
    repository: img.dev-arecabay.net/receiver
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v9"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
   # Specifies whether a service account should be created
    create: false
      # Annotations to add to the service account
    annotations: {}
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  env: {
    RCVR_REDIS_PUBLISHER_CONNECTION: '{"host":"controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled":false}',
    REDIS_HEALTH_CONNECTION: '{"host":"controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled":false}',
  }
    
  service:
    type: ClusterIP
    port: 80
    sslport: 443
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
  NodePort:
    enabled: true
  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}



normalizer:
  replicaCount: 1
  image:
    repository: img.dev-arecabay.net/normalizer
    tag: 1.1
    repository: normalizer
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
  env: {
    REDIS_PUBLISHER_CONNECTION: '{"host":"controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled":false}',
    REDIS_CONSUMER_CONNECTION: '{"host":"controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled":false}',
    API_KEY_AUTH_HOST: https://auth.stage.impervaservices.com,
    REDIS_HEALTH_CONNECTION: '{"host":"controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled":false}',
    PUBLISH_EVENTS_WITH_API_DESIGN_ISSUES: 'true',
  }

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
   # Specifies whether a service account should be created
    create: false
      # Annotations to add to the service account
    annotations: {}
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}


dfe:
  replicaCount: 1
  image:
    repository: img.dev-arecabay.net/discovery-feature-extractor
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "1.1"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
   # Specifies whether a service account should be created
    create: false
      # Annotations to add to the service account
    annotations: {}
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}
  env: {
    DFE_NORMALIZED_REDIS_INFO: '{"host":"controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled":false}',
    DFE_EXTRACTED_REDIS_INFO: '{"host":"controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled":false}',
    CONFIG_POLL_FREQUENCY_MINS: 5,
    SVC_AUTH_ENDPOINT: https://auth.stage.impervaservices.com/auth/v2/oauth2/token,
    SERVICE_AUTH_PROPS: '{"endpoint":"https://auth.stage.impervaservices.com/auth/v2/oauth2/token", "cred_source":"env"}',
    API_KEY_AUTH_HOST: https://auth.stage.impervaservices.com,
    SERVICE_AUTH_ENABLED: 'false',
    REDIS_HEALTH_CONNECTION: '{"host":"controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled":false}',
    DFE_NORMALIZED_W_AUTH_REDIS_INFO: '{"host":"controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled":false}',
  }

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}


summarizationEngine:
  replicaCount: 1
  image:
    repository: img.dev-arecabay.net/summarization-engine
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v19"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""
  env: {
  REDIS_SERVER_ADDR: '{"host":"controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled":false}',
  REDIS_CACHE_ADDR: '{"host":"controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled":false}',
  API_KEY_AUTH_HOST: https://auth.stage.impervaservices.com,
  DATA_PUBLISHER: REDIS,
  DISCOVERY_AGGREGATE_TIME: 60,
  APPL_AGGREGATE_TIME: 120,
  AUTH_AGGREGATE_TIME: 120,
  REDIS_HEALTH_CONNECTION: '{"host":"controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled":false}',
}
  serviceAccount:
   # Specifies whether a service account should be created
    create: false
      # Annotations to add to the service account
    annotations: {}
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}



cloudConnector:
  replicaCount: 1
  image:
    repository: img.dev-arecabay.net/cloud-connecter
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "1.4"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
   # Specifies whether a service account should be created
    create: false
      # Annotations to add to the service account
    annotations: {}
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80
  env: {
    REDIS_SERVER_ADDR: '{"host":"controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled":false}',
    REDIS_HEALTH_CONNECTION: '{"host":"controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled":false}',
  }

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}


afe:
  replicaCount: 1
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  applFilter:
    image:
      repository: img.dev-arecabay.net/appl-filter
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: "1.1"

    imagePullSecrets: []
    nameOverride: ""
    fullnameOverride: ""

    serviceAccount:
    # Specifies whether a service account should be created
      create: false
        # Annotations to add to the service account
      annotations: {}
        # The name of the service account to use.
        # If not set and create is true, a name is generated using the fullname template
      name: ""

    podAnnotations: {}

    podSecurityContext: {}
      # fsGroup: 2000

    securityContext: {}
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000
    env:   {
      REDIS_CACHE_CONNECTION: '{"host":"controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled":false}',
      REDIS_RCVR_CONNECTION: '{"host":"controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled":false}',
      REDIS_PUBLISHER_CONNECTION: '{"host":"controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled":false}',
      CLASSIFICATION_SVC_HOST: '{"host":"http://afe", "port":"80"}',
      API_KEY_AUTH_HOST: https://auth.stage.impervaservices.com,
      CONFIG_POLL_FREQUENCY_MINS: '5',
      SERVICE_AUTH_PROPS: '{"endpoint":"https://auth.stage.impervaservices.com/auth/v2/oauth2/token", "cred_source":"env"}',
      REDIS_CONFIG_CONNECTION: '{"host":"controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled":false}',
      REDIS_HEALTH_CONNECTION: '{"host":"controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled":false}',
      CONFIG_PUBLISHER: 'true',
      SERVICE_AUTH_ENABLED: 'false'
    }

    service:
      type: ClusterIP
      port: 80

    ingress:
      enabled: false
      className: ""
      annotations: {}
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
      hosts:
        - host: chart-example.local
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls: []
      #  - secretName: chart-example-tls
      #    hosts:
      #      - chart-example.local

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi

    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 100
      targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage: 80

    nodeSelector: {}

    tolerations: []

    affinity: {}


  applClfEngine:
    image:
      repository: img.dev-arecabay.net/appl-clf-engine
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: "1.1"

    imagePullSecrets: []
    nameOverride: ""
    fullnameOverride: ""

    serviceAccount:
    # Specifies whether a service account should be created
      create: false
        # Annotations to add to the service account
      annotations: {}
        # The name of the service account to use.
        # If not set and create is true, a name is generated using the fullname template
      name: ""

    podAnnotations: {}

    podSecurityContext: {}
      # fsGroup: 2000

    securityContext: {}
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000
    env:  {
      RCVR_REDIS_PUBLISHER_CONNECTION: '{"host":"controller-message-bus", "port":"6379"}',
      REDIS_HEALTH_CONNECTION: '{"host":"controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled":false}',
    }
    service:
      type: ClusterIP
      port: 80

    ingress:
      enabled: false
      className: ""
      annotations: {}
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
      hosts:
        - host: chart-example.local
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls: []
      #  - secretName: chart-example-tls
      #    hosts:
      #      - chart-example.local

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi

    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 100
      targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage: 80

    nodeSelector: {}

    tolerations: []

    affinity: {}



messageBus:
  image:
    repository: redis
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "7-alpine"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
   # Specifies whether a service account should be created
    create: false
      # Annotations to add to the service account
    annotations: {}
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 6379

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}



bolaStore:
  image:
    repository: redis
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "7-alpine"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
   # Specifies whether a service account should be created
    create: false
      # Annotations to add to the service account
    annotations: {}
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 6379

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}



bfe:
  replicaCount: 1
  image:
    repository: img.dev-arecabay.net/bola-feature-extractor
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "1.1"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
   # Specifies whether a service account should be created
    create: false
      # Annotations to add to the service account
    annotations: {}
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  env: {
    REDIS_SERVER_ADDR: '{"host":"controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled":false}',
    REDIS_SERVER_CACHE_ADDR: '{"host":"controller-bola-store", "port":6379, "cred_source": "env", "is_tls_enabled":false}',
    PROMETHEUS_MULTIPROC_DIR: '/tmp/MULTIPROC_DIR_REPORTS',
  }

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}


  DEPLOYMENT_PROFILE: ON-PREM
